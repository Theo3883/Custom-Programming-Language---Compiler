Scope: global (GLOBAL)
  VAR bool _condition_result
  VAR int a
  VAR int[] aa
  VAR int b
  VAR string[] c
  VAR char d
  VAR Program hatz
  VAR int[] intulet
  VAR bool k
  VAR int lll
  VAR char[] n
  VAR string[] v
  VAR int[][][] vvvv
  FUNC int add(int int int )
  Scope: Program (CLASS)
  Scope: block (BLOCK)
    VAR int a
    VAR int[] aa
    VAR int b
    VAR string[] c
    VAR char d
    VAR Program hatz
    VAR int[] intulet
    VAR bool k
    VAR int lll
    VAR char[] n
    VAR string[] v
    VAR int[][][] vvvv
  Scope: add (FUNCTION)
    VAR int a
    VAR int b
    VAR int c
  Scope: block (BLOCK)
    VAR bool _condition_result
    VAR int a
    VAR int[] aa
    VAR int b
    VAR string[] c
    VAR char d
    VAR Program hatz
    VAR int[] intulet
    VAR bool k
    VAR int lll
    VAR char[] n
    VAR string[] v
    VAR int[][][] vvvv
  Scope: while (BLOCK)
    Scope: block (BLOCK)
      VAR bool _condition_result
      VAR int a
      VAR int[] aa
      VAR int b
      VAR string[] c
      VAR char d
      VAR Program hatz
      VAR int[] intulet
      VAR bool k
      VAR int lll
      VAR char[] n
      VAR string[] v
      VAR int[][][] vvvv
